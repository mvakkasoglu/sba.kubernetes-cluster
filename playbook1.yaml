---
- hosts: localhost
  become: true
  vars:
    image_name: vakkasoglu/sba-kubernetes-cluster
    image_tag: latest
  # Pre-Tasks to validate if Minikube is running
  pre_tasks:
    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
    # - software-properties-common
  # - name: Add an apt signing key for Kubernetes
  #   apt_key:
  #     url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
  #     state: present
  # - name: Add apt repository for Kubernetes
  #   apt_repository:
  #     repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
  #     state: present
  #     filename: kubernetes.list
    - name: Install Kubernetes binaries
      apt:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
          - kubelet
          - kubeadm
          - kubectl
  #       - minikube
  # - name: minikubes delete
  #   command: minikube delete
    - name: Check Minikube's status.
      command: minikube status
      register: minikube_status
      changed_when: false
      ignore_errors: true
    # Otherwise will start minikube
    - name: Start Minikube if it's not running.
      command: minikube start
      when: "not minikube_status.stdout or 'Running' not in minikube_status.stdout"
  # Check existing images
  tasks:
    - name: Get existing image hash.
      shell: |
        eval $(minikube docker-env)
        docker images -q {{ image_name }}
      register: image_hash
      changed_when: false
  # Otherwise will create an image from Dockerfile location
    - name: Build image if it's not already built.
      shell: |
        eval $(minikube docker-env)
        docker build -t {{ image_name }} ../sba.kubernetes-cluster
      when: not image_hash.stdout
    
    - name: sysctl
      command: sysctl fs.protected_regular=0
    - name: copy deployment file to kubernetes master 
      copy:
        src: ./kubernetes.yaml
        dest: /etc/
    # - name: minikube start
    #   command: minikube start --driver=none
    - name: Minikube Deployment
      command: kubectl apply -f kubernetes.yaml 
    - name: Expose sba-kubernetes-cluster on the host via Minikube
      command: minikube service sba-kubernetes-cluster
    - name: Enable service
      service: 
        name: sba-kubernetes-cluster
        enabled: yes
  # - name: make executable
  #   command: chmod +x kubernetes-cluster-information.sh
  # - name: timeout
  #   wait_for:
  #     timeout: 60
  # - name: descripe
  #   shell: ./kubernetes-cluster-information.sh > somelogWroks.txt
  #   args:
  #     chdir: /home/ansiblem/gitRepos/2020_03_DO_Boston_casestudy_part_1

